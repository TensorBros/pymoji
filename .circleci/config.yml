# Python CircleCI 2.0 configuration file
#
# https://circleci.com/docs/2.0/language-python/
version: 2
jobs:
  build:
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7.13

    working_directory: ~/pymoji
    steps:
      - checkout

      # Install and cache Google Cloud SDK
      # originally adapted from ideas found here:
      # https://circleci.com/docs/2.0/google-container-engine/
      # http://blog.glop.org/2015/10/08/continuous-deployement-with-google-app-engine-and-circleci.html
      - restore_cache:
          keys:
          - google-cloud-sdk-166.0.0
      - run:
          name: install gcloud sdk
          command: |
            if [ ! -d ~/google-cloud-sdk ]; then
              curl https://sdk.cloud.google.com | bash
            else
              echo 'using cached google-cloud-sdk'
            fi
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
          environment:
            CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      - save_cache:
          paths:
            - ~/google-cloud-sdk
          key: google-cloud-sdk-166.0.0

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install python dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # Run linters
      - run:
          name: run linters
          command: |
            source venv/bin/activate
            echo 'skipping linters'
            #pylint --disable=C pymoji

      # Run tests and save results
      - run:
          name: run tests
          command: |
            source venv/bin/activate
            mkdir pymoji/static/gen
            python -m pytest --junitxml=tmp/test-reports.xml
      - store_test_results:
          path: tmp
      - store_artifacts:
          path: tmp

      # Deploy successful builds on master to Google App Engine
      # https://circleci.com/docs/2.0/deployment_integrations/
      - deploy:
          name: maybe deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              source ~/google-cloud-sdk/path.bash.inc
              gcloud --quiet components update
              gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
              gcloud --quiet config set project $GCLOUD_PROJECT_ID
              gcloud --quiet app deploy --promote
            else
              echo 'skipping deployment for non-master branch'
            fi

