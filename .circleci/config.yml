# Python CircleCI 2.0 configuration file
#
# https://circleci.com/docs/2.0/language-python/
version: 2
jobs:
  build:
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7.13

      # Specify service dependencies here if necessary
      - image: google/cloud-sdk

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # Run tests and save results
      - run:
          name: run tests
          command: |
            source venv/bin/activate
            python -m pytest --junitxml=test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports

      # Deploy successful builds on master to Google App Engine
      # https://circleci.com/docs/2.0/google-container-engine/
      - run:
        name: Decode Google Cloud Credentials
        command: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json

      # https://circleci.com/docs/2.0/deployment_integrations/
      - deploy:
          name: Maybe Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
              gcloud --quiet config set project $GCLOUD_PROJECT_ID
              gcloud --quiet app deploy --promote
            fi



